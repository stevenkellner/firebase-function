name: Run Test with Coverage Report and upload it to Github Pages

on:
  push:
    branches:
     - '**'
  pull_request:
    branches:
      - '**'

jobs:
  is-release-commit:
    uses: ./.github/workflows/is-release-commit.yml
    with:
      commit-message: ${{ github.event.head_commit.message }}

  test-coverage:
    name: "Run Test with Coverage Report"
    runs-on: ubuntu-latest
    needs: is-release-commit
    if: needs.is-release-commit.outputs.IS_RELEASE_COMMIT == 'false'
    timeout-minutes: 5
    env:
      FIREBASE_TYPE: ${{ secrets.FIREBASE_TYPE }}
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
      FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
      FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
      FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
      FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
      FIREBASE_AUTH_URI: ${{ secrets.FIREBASE_AUTH_URI }}
      FIREBASE_TOKEN_URI: ${{ secrets.FIREBASE_TOKEN_URI }}
      FIREBASE_AUTH_PROVIDER_X509_CERT_URL: ${{ secrets.FIREBASE_AUTH_PROVIDER_X509_CERT_URL }}
      FIREBASE_CLIENT_X509_CERT_URL: ${{ secrets.FIREBASE_CLIENT_X509_CERT_URL }}
      FIREBASE_UNIVERSE_DOMAIN: ${{ secrets.FIREBASE_UNIVERSE_DOMAIN }}
      FIREBASE_DATABASE_URL: ${{ secrets.FIREBASE_DATABASE_URL }}
      FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
      FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}
      FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm i -g firebase-tools
      - run: npm ci
      - run: npm run test:coverage
      - uses: actions/upload-pages-artifact@v3
        with:
          path: coverage/

  deploy-coverage-report:
    name: "Deploy Coverage Report to Github Pages"
    needs: test-coverage
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
